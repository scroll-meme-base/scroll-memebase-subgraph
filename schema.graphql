type Initialized @entity(immutable: true) {
  id: Bytes!
  version: BigInt! # uint64
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PoolCreated @entity(immutable: true) {
  id: Bytes!
  poolId: BigInt! # uint256
  name: String! # string
  symbol: String! # string
  totalSupply: BigInt! # uint256
  poolCreater: Bytes! # address
  deadLine: BigInt! # uint256
  useWhitelist: Boolean! # bool
  miniStakeValue: BigInt! # uint256
  maxStakeValue: BigInt! # uint256
  whitelistIndex: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Stake @entity(immutable: true) {
  id: Bytes!
  staker: Bytes! # address
  poolId: BigInt! # uint256
  amount: BigInt! # uint256
  rank: BigInt! # uint256
  userScore: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Unstake @entity(immutable: true) {
  id: Bytes!
  staker: Bytes! # address
  poolId: BigInt! # uint256
  amount: BigInt! # uint256
  fee: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Upgraded @entity(immutable: true) {
  id: Bytes!
  implementation: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Claim @entity(immutable: true) {
  id: Bytes!
  claimer: Bytes! # address
  poolId: BigInt! # uint256
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TokenDeployed @entity(immutable: true) {
  id: Bytes!
  poolId: BigInt! # uint256
  tokenAddress: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ProposalCreated @entity(immutable: true) {
  id: Bytes!
  params_topicId: BigInt! # uint256
  params_proposalId: BigInt! # uint256
  params_name: String! # string
  params_symbol: String! # string
  params_duration: BigInt! # uint256
  params_totalSupply: BigInt! # uint256
  params_miniStakeValue: BigInt! # uint256
  params_maxStakeValue: BigInt! # uint256
  params_maxParticipants: BigInt! # uint256
  params_whitelistIndex: BigInt! # uint256
  params_proposer: Bytes! # address
  params_useWhitelist: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ProposalExecuted @entity(immutable: true) {
  id: Bytes!
  topicId: BigInt! # uint256
  proposalId: BigInt! # uint256
  poolId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TopicStarted @entity(immutable: true) {
  id: Bytes!
  topicId: BigInt! # uint256
  name: String! # string
  deadline: BigInt! # uint256
  topicCreator: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type VoteCast @entity(immutable: true) {
  id: Bytes!
  voter: Bytes! # address
  proposalId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}